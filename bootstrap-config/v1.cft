{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Ceph 2.0 TestDrive Cloud Formation Stack V1",

  "Parameters" : {

    "EnabledAZs" : {
      "Description" : "List of AZs enabled for this account and region",
      "Type" : "CommaDelimitedList",
      "Default" : "us-east-1",
      "AllowedValues" : [ "us-east-1","us-west-1"]
    },

    "KeyName" : {
      "Description" : "Name of an EC2 KeyPair to SSH into instances",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "64",
      "Default" : "qwikLABS-L33-5244",
      "NoEcho": "true",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },

    "CustomerRef" : {
      "Description" : "Red Hat Storage Customer Reference for Tagging Resources",
      "Type" : "String",
      "Default" : "DefaultRef"
    },


    "CustomerEmailRef" : {
      "Description" : "Red Hat Storage Customer Email Reference for Tagging Resources",
      "Type" : "String",
      "Default" : "DefaultEmailRef"
    },

      "EC2InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String",
      "Default" : "m4.xlarge",
      "NoEcho": "true",
      "AllowedValues" : [ "m4.xlarge" ],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    }
},

  "Mappings" : {
    
    "AWSNATAMI" : {
      "us-east-1"      : { "AMI" : "ami-4868ab25" }
    },

    "RHEL72AMI" : {
      "us-east-1"      : { "AMI" : "ami-2051294a" }
    },

    "AWSInstanceType2Arch" : {
      "m4.xlarge"    : { "Arch" : "64" }
    },

    "SubnetConfig" : {
      "VPC"     : { "CIDR" : "10.100.0.0/16" },
      "Public"  : { "CIDR" : "10.100.0.0/24" },
      "Private1" : { "CIDR" : "10.100.1.0/24" },
      "Private2" : { "CIDR" : "10.100.2.0/24" }
    }
},

  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "VPC", "CIDR" ]},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },


    "PublicSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Public", "CIDR" ]},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "VPCGatewayAttachment" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "DependsOn" : ["VPC", "InternetGateway"],
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : ["PublicRouteTable", "InternetGateway"],
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "PublicSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn" : [ "PublicRouteTable",  "PublicSubnet"],
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PublicNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "InboundHTTPPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : "PublicNetworkAcl",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "OutboundPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : "PublicNetworkAcl",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "PublicSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [ "PublicSubnet", "PublicNetworkAcl"],
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "PrivateSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Private1", "CIDR" ]},
	      "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private1" }
        ]
      }
    },

    "PrivateRouteTable1" : {
      "Type" : "AWS::EC2::RouteTable",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private1" }
        ]
      }
    },

    "PrivateSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn" : [ "PrivateSubnet1", "PrivateRouteTable1" ],
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet1" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable1" }
      }
    },

    "PrivateRoute1" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : ["PrivateRouteTable1", "NATDevice" ],
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable1" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NATDevice" }
      }
    },

    "PrivateNetworkAcl1" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private1" }
        ]
      }
    },

    "InboundPrivateNetworkAclEntry1" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : "PrivateNetworkAcl1",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl1" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "OutBoundPrivateNetworkAclEntry1" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : "PrivateNetworkAcl1",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl1" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "PrivateSubnetNetworkAclAssociation1" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn" : ["PrivateSubnet1", "PrivateNetworkAcl1"],
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet1" },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl1" }
      }
    },


    "PrivateSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Private2", "CIDR" ]},
	      "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private2" }
        ]
      }
    },

    "PrivateRouteTable2" : {
      "Type" : "AWS::EC2::RouteTable",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private2" }
        ]
      }
    },

    "PrivateSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn" : [ "PrivateSubnet2", "PrivateNetworkAcl2" ],
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet2" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable2" }
      }
    },

    "PrivateRoute2" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : [ "PrivateRouteTable2", "NATDevice" ],
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable2" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NATDevice" }
      }
    },

    "PrivateNetworkAcl2" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "DependsOn" : "VPC",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private2" }
        ]
      }
    },

    "InboundPrivateNetworkAclEntry2" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : "PrivateNetworkAcl2",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl2" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "OutBoundPrivateNetworkAclEntry2" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : "PrivateNetworkAcl2",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl2" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "PrivateSubnetNetworkAclAssociation2" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn" : ["PrivateSubnet2", "PrivateNetworkAcl2"],
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet2" },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl2" }
      }
    },

    "NATDevice" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "PublicSubnet",
      "Properties" : {
        "InstanceType" : { "Ref" : "EC2InstanceType" },
	      "KeyName"  : { "Ref" : "KeyName" },
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "SourceDestCheck" : "false",
        "ImageId" : { "Fn::FindInMap" : [ "AWSNATAMI", { "Ref" : "AWS::Region" }, "AMI" ]},
        "Tags" : [{ "Key": "Name", "Value" : "NAT-Instance"},{ "Key": "CustRef", "Value" : { "Ref" : "CustomerRef" }},{ "Key": "CustEmailRef", "Value" : { "Ref" : "CustomerEmailRef" }}],
        "SecurityGroupIds" : [{ "Ref" : "SecurityGroup" }]
      }
    },

    "NATIPAddress" : {
      "Type" : "AWS::EC2::EIP",
      "DependsOn" : "NATDevice",
      "Properties" : {
        "Domain" : "vpc",
        "InstanceId" : { "Ref" : "NATDevice" }
      }
    },

    "cephosd1" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "PrivateSubnet1",
      "Properties" : {
        "InstanceType" : { "Ref" : "EC2InstanceType" },
	      "KeyName"  : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "RHEL72AMI", { "Ref" : "AWS::Region" }, "AMI" ]},
        "SubnetId" : { "Ref" : "PrivateSubnet1" },
        "PrivateIpAddress" : "10.100.1.11",
        "SecurityGroupIds" : [{ "Ref" : "SecurityGroup" }],
        "Tags" : [{ "Key": "Name", "Value" : "cephosd1"},{ "Key": "CustRef", "Value" : { "Ref" : "CustomerRef" }},{ "Key": "CustEmailRef", "Value" : { "Ref" : "CustomerEmailRef" }}],
	      "BlockDeviceMappings" : [
          {
            "DeviceName" : "/dev/sdb",
            "VirtualName" : "ceph-osd1-vol1",
            "Ebs" : { "VolumeSize" : "100" , "VolumeType":"gp2" }
          },{
            "DeviceName" : "/dev/sdc",
            "VirtualName" : "ceph-osd1-vol2",
            "Ebs" : { "VolumeSize" : "100" , "VolumeType":"gp2" }
          },{
            "DeviceName" : "/dev/sdd",
            "VirtualName" : "ceph-osd1-vol3",
            "Ebs" : { "VolumeSize" : "100" , "VolumeType":"gp2" }
          }
        ]
      }
    },

    "cephosd2" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "PrivateSubnet1",
      "Properties" : {
        "InstanceType" : { "Ref" : "EC2InstanceType" },
	      "KeyName"  : { "Ref" : "KeyName" },
        "SubnetId" : { "Ref" : "PrivateSubnet1" },
	      "PrivateIpAddress" : "10.100.1.12",
        "ImageId" : { "Fn::FindInMap" : [ "RHEL72AMI", { "Ref" : "AWS::Region" }, "AMI" ]},
        "SecurityGroupIds" : [{ "Ref" : "SecurityGroup" }],
        "Tags" : [{ "Key": "Name", "Value" : "cephosd2"},{ "Key": "CustRef", "Value" : { "Ref" : "CustomerRef" }},{ "Key": "CustEmailRef", "Value" : { "Ref" : "CustomerEmailRef" }}],
        "BlockDeviceMappings" : [
          {
            "DeviceName" : "/dev/sdb",
            "VirtualName" : "ceph-osd2-vol1",
            "Ebs" : { "VolumeSize" : "100" , "VolumeType":"gp2" }
          },{
            "DeviceName" : "/dev/sdc",
            "VirtualName" : "ceph-osd2-vol2",
            "Ebs" : { "VolumeSize" : "100" , "VolumeType":"gp2" }
          },{
            "DeviceName" : "/dev/sdd",
            "VirtualName" : "ceph-osd2-vol3",
            "Ebs" : { "VolumeSize" : "100" , "VolumeType":"gp2" }
          }
        ]
      }
    },

    "cephosd3" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "PrivateSubnet1",
      "Properties" : {
        "InstanceType" : { "Ref" : "EC2InstanceType" },
	      "KeyName"  : { "Ref" : "KeyName" },
        "SubnetId" : { "Ref" : "PrivateSubnet1" },
	      "PrivateIpAddress" : "10.100.1.13",
        "ImageId" : { "Fn::FindInMap" : [ "RHEL72AMI", { "Ref" : "AWS::Region" }, "AMI" ]},
        "SecurityGroupIds" : [{ "Ref" : "SecurityGroup" }],
        "Tags" : [{ "Key": "Name", "Value" : "cephosd3"},{ "Key": "CustRef", "Value" : { "Ref" : "CustomerRef" }},{ "Key": "CustEmailRef", "Value" : { "Ref" : "CustomerEmailRef" }}],
        "BlockDeviceMappings" : [
          {
            "DeviceName" : "/dev/sdb",
            "VirtualName" : "ceph-osd3-vol1",
            "Ebs" : { "VolumeSize" : "100" , "VolumeType":"gp2" }
          },{
            "DeviceName" : "/dev/sdc",
            "VirtualName" : "ceph-osd3-vol2",
            "Ebs" : { "VolumeSize" : "100" , "VolumeType":"gp2" }
          },{
            "DeviceName" : "/dev/sdd",
            "VirtualName" : "ceph-osd3-vol3",
            "Ebs" : { "VolumeSize" : "100" , "VolumeType":"gp2" }
          }
        ]
      }
    },

    "cephosd4" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "PrivateSubnet1",
      "Properties" : {
        "InstanceType" : { "Ref" : "EC2InstanceType" },
	      "KeyName"  : { "Ref" : "KeyName" },
        "SubnetId" : { "Ref" : "PrivateSubnet1" },
	      "PrivateIpAddress" : "10.100.1.14",
        "ImageId" : { "Fn::FindInMap" : [ "RHEL72AMI", { "Ref" : "AWS::Region" }, "AMI" ]},
        "SecurityGroupIds" : [{ "Ref" : "SecurityGroup" }],
        "Tags" : [{ "Key": "Name", "Value" : "cephosd4"},{ "Key": "CustRef", "Value" : { "Ref" : "CustomerRef" }},{ "Key": "CustEmailRef", "Value" : { "Ref" : "CustomerEmailRef" }}],
        "BlockDeviceMappings" : [
          {
            "DeviceName" : "/dev/sdb",
            "VirtualName" : "ceph-osd4-vol1",
            "Ebs" : { "VolumeSize" : "100" , "VolumeType":"gp2" }
          },{
            "DeviceName" : "/dev/sdc",
            "VirtualName" : "ceph-osd4-vol2",
            "Ebs" : { "VolumeSize" : "100" , "VolumeType":"gp2" }
          },{
            "DeviceName" : "/dev/sdd",
            "VirtualName" : "ceph-osd4-vol3",
            "Ebs" : { "VolumeSize" : "100" , "VolumeType":"gp2" }
          }
        ]
      }
    },

    "cephmon1" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "PrivateSubnet2",
      "Properties" : {
        "InstanceType" : { "Ref" : "EC2InstanceType" },
	      "KeyName"  : { "Ref" : "KeyName" },
        "SubnetId" : { "Ref" : "PrivateSubnet2" },
	      "PrivateIpAddress" : "10.100.2.11",
        "ImageId" : { "Fn::FindInMap" : [ "RHEL72AMI", { "Ref" : "AWS::Region" }, "AMI" ]},
        "SecurityGroupIds" : [{ "Ref" : "SecurityGroup" }],
        "Tags" : [{ "Key": "Name", "Value" : "cephmon1"},{ "Key": "CustRef", "Value" : { "Ref" : "CustomerRef" }},{ "Key": "CustEmailRef", "Value" : { "Ref" : "CustomerEmailRef" }}]
      }
    },

   "cephmon2" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "PrivateSubnet2",
      "Properties" : {
        "InstanceType" : { "Ref" : "EC2InstanceType" },
	      "KeyName"  : { "Ref" : "KeyName" },
        "SubnetId" : { "Ref" : "PrivateSubnet2" },
	      "PrivateIpAddress" : "10.100.2.12",
        "ImageId" : { "Fn::FindInMap" : [ "RHEL72AMI", { "Ref" : "AWS::Region" }, "AMI" ]},
        "SecurityGroupIds" : [{ "Ref" : "SecurityGroup" }],
        "Tags" : [{ "Key": "Name", "Value" : "cephmon2"},{ "Key": "CustRef", "Value" : { "Ref" : "CustomerRef" }},{ "Key": "CustEmailRef", "Value" : { "Ref" : "CustomerEmailRef" }}]
      }
    },
 
   "cephmon3" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "PrivateSubnet2",
      "Properties" : {
        "InstanceType" : { "Ref" : "EC2InstanceType" },
	      "KeyName"  : { "Ref" : "KeyName" },
        "SubnetId" : { "Ref" : "PrivateSubnet2" },
	      "PrivateIpAddress" : "10.100.2.13",
        "ImageId" : { "Fn::FindInMap" : [ "RHEL72AMI", { "Ref" : "AWS::Region" }, "AMI" ]},
        "SecurityGroupIds" : [{ "Ref" : "SecurityGroup" }],
        "Tags" : [{ "Key": "Name", "Value" : "cephmon3"},{ "Key": "CustRef", "Value" : { "Ref" : "CustomerRef" }},{ "Key": "CustEmailRef", "Value" : { "Ref" : "CustomerEmailRef" }}]
      }
    },
 
   "client1" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "PrivateSubnet2",
      "Properties" : {
        "InstanceType" : { "Ref" : "EC2InstanceType" },
	      "KeyName"  : { "Ref" : "KeyName" },
        "SubnetId" : { "Ref" : "PrivateSubnet2" },
	      "PrivateIpAddress" : "10.100.2.14",
        "ImageId" : { "Fn::FindInMap" : [ "RHEL72AMI", { "Ref" : "AWS::Region" }, "AMI" ]},
        "SecurityGroupIds" : [{ "Ref" : "SecurityGroup" }],
        "Tags" : [{ "Key": "Name", "Value" : "client1"},{ "Key": "CustRef", "Value" : { "Ref" : "CustomerRef" }},{ "Key": "CustEmailRef", "Value" : { "Ref" : "CustomerEmailRef" }}]
      }
    },
 
    "managementnode" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : ["PublicSubnet","client1","cephmon1","cephmon2","cephmon3","cephosd1","cephosd2","cephosd3","cephosd4"],
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "packages": {
              "yum": {
                "wget" : []
              }
            }
          }
        }
      }, 
      "Properties" : {
        "InstanceType" : { "Ref" : "EC2InstanceType" },
	      "KeyName"  : { "Ref" : "KeyName" },
        "SubnetId" : { "Ref" : "PublicSubnet" },
	      "PrivateIpAddress" : "10.100.0.72",
        "ImageId" : { "Fn::FindInMap" : [ "RHEL72AMI", { "Ref" : "AWS::Region" }, "AMI" ]},
        "Tags" : [{ "Key": "Name", "Value" : "managementnode"},{ "Key": "CustRef", "Value" : { "Ref" : "CustomerRef" }},{ "Key": "CustEmailRef", "Value" : { "Ref" : "CustomerEmailRef" }}],
        "SecurityGroupIds" : [{ "Ref" : "SecurityGroup" }],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": ["", [
              "#!/bin/bash -v\n",
              "wget -O /root/bootstrap.sh https://raw.githubusercontent.com/ksingh7/ceph-test-drive-bootstrap/master/bootstrap.sh\n",
              "chmod 760 /root/bootstrap.sh\n",
              "sh /root/bootstrap.sh\n"
            ]]
          }
        }
      }
    },

    "managementnodeEIP" : {
      "Type" : "AWS::EC2::EIP",
      "DependsOn" : ["managementnode","InternetGateway"],
      "Properties" : {
        "Domain" : "vpc",
        "InstanceId" : { "Ref" : "managementnode" }
      }
    },

    "SecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "DependsOn" : "VPC",
      "Properties" : {
        "GroupDescription" : "Enable internal access to the NAT device",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [
          { "IpProtocol" : "-1", "FromPort" : "0",  "ToPort" : "65535",  "CidrIp" : "0.0.0.0/0" }],
        "SecurityGroupEgress" : [
          { "IpProtocol" : "-1", "FromPort" : "0",  "ToPort" : "65535",  "CidrIp" : "0.0.0.0/0" }]
	}
    }

},


  "Outputs" : {
    
   "cephnode1PrivIP" : {
      "Description" : "Ceph OSD Node1 Private IP",
      "Value" :  { "Fn::GetAtt" : [ "cephosd1", "PrivateIp" ]}
    },

   "cephnode2PrivIP" : {
      "Description" : "Ceph OSD Node2 Private IP",
      "Value" :  { "Fn::GetAtt" : [ "cephosd2", "PrivateIp" ]}
    },

   "cephnode3PrivIP" : {
      "Description" : "Ceph OSD Node3 Private IP",
      "Value" :  { "Fn::GetAtt" : [ "cephosd3", "PrivateIp" ]}
    },

   "cephnode4PrivIP" : {
      "Description" : "Ceph OSD Node4 Private IP",
      "Value" :  { "Fn::GetAtt" : [ "cephosd4", "PrivateIp" ]}
    },

   "cephmon1PrivIP" : {
      "Description" : "Ceph Monitor Node1 Private IP",
      "Value" :  { "Fn::GetAtt" : [ "cephmon1", "PrivateIp" ]}
    },

    "cephmon2PrivIP" : {
      "Description" : "Ceph Monitor Node2 Private IP",
      "Value" :  { "Fn::GetAtt" : [ "cephmon2", "PrivateIp" ]}
    },

    "cephmon3PrivIP" : {
      "Description" : "Ceph Monitor Node3 Private IP",
      "Value" :  { "Fn::GetAtt" : [ "cephmon3", "PrivateIp" ]}
    },

    "client1PrivIP" : {
      "Description" : "Client Node1 Private IP",
      "Value" :  { "Fn::GetAtt" : [ "client1", "PrivateIp" ]}
    },

   "managementnodePublicIP" : {
      "Description" : "Ceph Management Node Public EIP",
      "Value" :  { "Ref" : "managementnodeEIP" }
   }

  }
}

